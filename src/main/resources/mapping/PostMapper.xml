<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.lsun.bbs171.repository.PostRepository">

    <insert id="submit" parameterType="Post">
        insert into posts(user_id, title, content, category)
        values (#{user_id}, #{title}, #{content}, #{category})
    </insert>

    <select id="findPostsForIndex" resultType="PostForIndex">
        select posts.id,
        posts.title,
        posts.datetime,
        posts.category,
        posts.views,
        posts.comment,
        posts.highlight,
        posts.user_id,
        users.username,
        users.avatar
        from posts
        inner join users on users.id = posts.user_id and posts.status = 1
        <if test="category != 0">
            and category = #{category}
        </if>
        <if test="keywords != ''">
            and title REGEXP #{keywords}
        </if>
        order by ${sort} desc
    </select>

    <select id="findPostsForManage" resultType="PostForManage">
        select posts.id,
        posts.title,
        posts.datetime,
        posts.category,
        posts.views,
        posts.status,
        posts.report,
        posts.comment,
        posts.user_id,
        users.username
        from posts
        inner join users on users.id = posts.user_id
        <if test="category != 0">
            and category = #{category}
        </if>
        <if test="status != 3">
            and status = #{status}
        </if>
        <if test="keywords != ''">
            and title REGEXP #{keywords}
        </if>
        order by ${sort} desc
    </select>

    <select id="findPostsForUserHome" resultType="PostForUserHome">
        select id,
               title,
               datetime,
               category,
               views,
               status,
               comment,
               highlight
        from posts
        where user_id = #{user_id}
          and status = 1
        order by datetime desc
        limit 10

    </select>

    <select id="findPostDetail" resultType="PostDetail">
        select posts.*,
        users.role,
        users.username,
        users.gender,
        users.sign,
        users.avatar
        <if test="user_id != 0">
            , stars.user_id star
        </if>
        from posts
        inner join users on posts.id = #{id} and users.id = posts.user_id
        <if test="user_id != 0">
            left join stars on stars.user_id = #{user_id} and stars.post_id = #{id}
        </if>
        where posts.id = #{id}
        limit 1
    </select>

    <update id="updateViews">
        update posts
        set views = views + 1
        where id = #{id}
    </update>

    <update id="updateCommentCount">
        update posts
        set comment = comment + ${num}
        where id = #{id}
    </update>

    <update id="updateStatus">
        update posts
        set status = ${status}
        where id = #{id}
    </update>

    <update id="updateHighlight">
        update posts
        set highlight = ${highlight}
        where id = #{id}
    </update>

    <select id="getHot" resultType="PostForHot">
        select id, title, hot_count.comment
        from posts
                 inner join (
            select post_id, count(*) as comment
            from (select post_id from comment where date_sub(curdate(), interval 7 day) &lt; date(datetime)) as hot
            group by post_id
            order by comment desc
            limit 5) as hot_count
        where posts.id = hot_count.post_id
          and posts.status = 1
        order by comment desc
    </select>

</mapper>